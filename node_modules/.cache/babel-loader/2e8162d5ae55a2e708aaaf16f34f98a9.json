{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/darlene/\\xC1rea de Trabalho/Reprograma-react/projeto-final-reprograma/src/projeto/Components/Text.jsx\",\n    _s = $RefreshSig$();\n\n//Formulário fala conosco\n// import { Formik , Field, Form , ErrorMessage} from 'formik'\n// import { useCallback } from 'react'\n// import schema from '../src/schema'\n// const App = () => {\n//   function onSubmit(values, {resetForm}){\n//     console.log(values)\n//     resetForm({values: ''})\n//   }\n//   return (\n//     <div>\n//       <h1>Contato</h1>\n//       <Formik \n//       onSubmit={onSubmit}\n//       validationSchema={schema}\n//         initialValues={{\n//           name: '',\n//           email:'',\n//           message:''\n//         }}\n//         render={({ values, errors, touched, isValid}) => (\n//           <Form>\n//             <Field\n//               type=\"text\"\n//               name=\"name\"\n//               placeholder=\"Digite o seu nome\"\n//             />\n//             <ErrorMessage name='name'/>\n//             <Field\n//               type=\"text\"\n//               name=\"email\"\n//               placeholder=\"Digite o seu e-mail\"\n//             />\n//              <ErrorMessage name='email'/>\n//             <Field\n//               type=\"text\"\n//               name=\"message\"\n//               placeholder=\"Mensagem\"\n//             />\n//             <ErrorMessage name='message'/>\n//             <button type='submit' value='send' disabled={!isValid}  >Enviar</button>\n//           </Form>\n//         )}\n//       />\n//     </div>\n//   )\n// }\n// export default App\n//LINK DE ESTUDO\n//https://www.youtube.com/watch?v=NcMsGS2_87U\n// **************************************************\n//FORM 2\nimport '../Styles/modal/modal.css';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport schema2 from '../Modal/schema2';\nimport '../Styles/modal/modalDoar.css';\nimport swal from 'sweetalert';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Field from '@material-ui/core/TextField'; // import MenuItem from '@material-ui/core/MenuItem';\n// ReactDOM.render(<Demo />, document.querySelector('#root'));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '40ch'\n    }\n  }\n}));\nconst currencies = [{\n  value: 'Select',\n  label: 'Selecione'\n}, {\n  value: 'name',\n  label: 'Apadrinhar'\n}, {\n  value: 'name',\n  label: 'Fazer doação'\n}, {\n  value: 'name',\n  label: 'Ser amigo'\n}];\n\nconst Text = ({\n  id = 'modal',\n  onClose = () => {},\n  Children\n}) => {\n  _s();\n\n  const handleOutsideClick = e => {\n    if (e.target.id === id) onClose();\n  };\n\n  const classes = useStyles();\n  const [currency, setCurrency] = useState('Select');\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n  };\n\n  function onSubmit(values, {\n    resetForm\n  }) {\n    console.log(values);\n    swal(\"Formulário preenchido!\", \"Em breve entraremos em contato!\", \"success\");\n    resetForm({\n      values: ''\n    }); // swal(\"Formulário preenchido!\", \"Em breve entraremos em contato!\", \"success\");\n\n    onClose();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    className: \"modalDoar\",\n    onClick: handleOutsideClick,\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: onSubmit,\n      validationSchema: schema2,\n      initialValues: {\n        name: '',\n        date: '',\n        email: '',\n        genero: '',\n        select: ''\n      },\n      render: ({\n        values,\n        errors,\n        touched,\n        isValid\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: classes.root,\n        className: \"container-form\",\n        autoComplete: \"on\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title-h2 form-title\",\n          children: \"Preencher o formul\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"standard-basic\",\n          type: \"text\",\n          name: \"name\",\n          label: \"Nome Completo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"standard-basic\",\n          type: \"number\",\n          name: \"phone\",\n          label: \"Telefone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"standard-basic\",\n          type: \"date\",\n          name: \"date\",\n          label: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"standard-basic\",\n          type: \"name\",\n          name: \"genero\",\n          label: \"G\\xEAnero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"standard-basic\",\n          type: \"email\",\n          name: \"email\",\n          label: \"E-mail:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"standard-select-currency-native\",\n          select: true,\n          name: \"select\",\n          label: \"Eu quero:\",\n          value: currency,\n          onChange: handleChange,\n          SelectProps: {\n            native: true\n          },\n          helperText: \"Please select your currency\",\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"send\",\n          name: \"send\" // disabled={!isValid} \n          ,\n          className: \"button-form\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: Children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Text, \"zh3VUndRqlk6dk8e9WEAUvwAeg0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Text;\nexport default Text; // const ModalFormDoar = ({ id='modal', onClose = () => {}, Children}) => {\n//     const handleOutsideClick = (e) => {\n//         if(e.target.id === id) onClose();\n//     }\n//     function onSubmit(values,{ resetForm }){\n//             console.log(values)\n//         swal(\"Formulário preenchido!\", \"Em breve entraremos em contato!\", \"success\");\n//         resetForm({ values: '' }) \n//         onClose()\n//     }\n//     return(       \n//         <div id={id} className='modalDoar' onClick={handleOutsideClick}>\n//             <Formik\n//                     onSubmit={onSubmit}\n//                     validationSchema={schema2}\n//                     initialValues={{\n//                         name: '',\n//                         date: '',\n//                         email: ''\n//                     }}\n//                     render={({ values, errors, touched, isValid }) => (\n//                         <Form className='container-form'>\n//                             <button onClick={(onClose)} className='close'>X</button>\n//                             <h2 className='title-h2 form-title' >Preencher o formulário</h2>\n//                             <section className='label'>\n//                             <label>Nome Completo</label>\n//                                     <Field\n//                                     type=\"text\"\n//                                     name=\"name\"\n//                                     className='input'\n//                                     />\n//                                     <ErrorMessage name='name' />\n//                             </section>\n//                             <div className='group1'>\n//                                 <section className='options'>\n//                                     <label>Data de nasc:</label> \n//                                     <Field\n//                                         type='date'\n//                                         name='date'\n//                                         className='input-2'\n//                                         />\n//                                     <ErrorMessage name='date' />\n//                                 </section>\n//                                 <section className='options'>\n//                                 <label>Gênero</label>\n//                                 <Field name=\"genero\" component=\"select\" className='input-2' >\n//                                     <option value=\"red\">Selecione</option>\n//                                     <option value=\"red\">Masculino</option>\n//                                     <option value=\"green\">Feminino</option>\n//                                     <option value=\"blue\">Outros</option>\n//                                 </Field>\n//                                     {/* <select name=\"genero\"   className='input-2'>\n//                                         <option  className='input-3' value=\"selecione\">Selecione</option>\n//                                         <option  className='input-3' value=\"Masculino\">Masculino</option>\n//                                         <option  className='input-3' value=\"Fminino\">Feminino</option>\n//                                         <option   className='input-3'value=\"outros\">outros</option>\n//                                     </select> */}\n//                                     {/* <ErrorMessage name='genero'/> */}\n//                                 </section>\n//                             </div>\n//                             <section className='label section-email'>\n//                             <label >E-mail</label>\n//                             <Field\n//                                 type=\"text\"\n//                                 name=\"email\"\n//                                 placeholder=\"Digite o seu e-mail\"\n//                                 className='input'\n//                             />\n//                             <ErrorMessage name='email' />\n//                             </section>\n//                             <section className='options-2'>\n//                                 <label>Quero ajudar um miau com:</label>\n//                                 <select name=\"help\" id=\"Genero\">\n//                                     <option value=\"selecione\" >Selecione</option>\n//                                     <option value=\"apadrinhar\">Apadrinhar</option>\n//                                     <option value=\"doar\">Fazer doação</option>\n//                                     <option value=\"ser amigo\">Ser amigo</option>\n//                                 </select>\n//                             {/* <ErrorMessage name='help'/> */}\n//                             </section>\n//                             <button \n//                             type='submit' \n//                             value='send' \n//                             name='send'\n//                             disabled={!isValid} \n//                             className=\"button-form\"          \n//                             >\n//                             Enviar                            \n//                         </button>   \n//                         </Form>\n//                     )}\n//                 />\n//                 <div className='content'>{Children}</div>\n//         </div>\n//     )\n// }\n// export default ModalFormDoar\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/home/darlene/Área de Trabalho/Reprograma-react/projeto-final-reprograma/src/projeto/Components/Text.jsx"],"names":["Formik","Form","ErrorMessage","schema2","swal","useState","makeStyles","Field","useStyles","theme","root","margin","spacing","width","currencies","value","label","Text","id","onClose","Children","handleOutsideClick","e","target","classes","currency","setCurrency","handleChange","event","onSubmit","values","resetForm","console","log","name","date","email","genero","select","errors","touched","isValid","native"],"mappings":"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A;AAAA,gBApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,YAFA,eA8DA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAA0BtB;AAA1B;AAAA;AAAA;AAAA;AAAA,YA9DA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkED,CA1FC;;GAAMH,I;UAMYT,S;;;KANZS,I;AA4FR,eAAeA,IAAf,C,CAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["//Formulário fala conosco\n\n// import { Formik , Field, Form , ErrorMessage} from 'formik'\n// import { useCallback } from 'react'\n// import schema from '../src/schema'\n\n\n// const App = () => {\n\n//   function onSubmit(values, {resetForm}){\n//     console.log(values)\n\n//     resetForm({values: ''})\n//   }\n\n\n//   return (\n//     <div>\n\n//       <h1>Contato</h1>\n\n//       <Formik \n//       onSubmit={onSubmit}\n//       validationSchema={schema}\n\n//         initialValues={{\n//           name: '',\n//           email:'',\n//           message:''\n//         }}\n\n//         render={({ values, errors, touched, isValid}) => (\n//           <Form>\n//             <Field\n//               type=\"text\"\n//               name=\"name\"\n//               placeholder=\"Digite o seu nome\"\n//             />\n//             <ErrorMessage name='name'/>\n//             <Field\n\n//               type=\"text\"\n//               name=\"email\"\n//               placeholder=\"Digite o seu e-mail\"\n//             />\n//              <ErrorMessage name='email'/>\n\n//             <Field\n//               type=\"text\"\n//               name=\"message\"\n//               placeholder=\"Mensagem\"\n//             />\n//             <ErrorMessage name='message'/>\n\n//             <button type='submit' value='send' disabled={!isValid}  >Enviar</button>\n//           </Form>\n//         )}\n\n//       />\n\n//     </div>\n//   )\n// }\n\n// export default App\n\n//LINK DE ESTUDO\n//https://www.youtube.com/watch?v=NcMsGS2_87U\n\n\n\n\n\n// **************************************************\n\n//FORM 2\n\nimport '../Styles/modal/modal.css'\nimport { Formik, Form, ErrorMessage } from 'formik'\nimport schema2 from '../Modal/schema2'\nimport '../Styles/modal/modalDoar.css'\nimport swal from 'sweetalert';  \n\nimport { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Field from '@material-ui/core/TextField';\n\n\n\n    \n\n// import MenuItem from '@material-ui/core/MenuItem';\n\n// ReactDOM.render(<Demo />, document.querySelector('#root'));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '40ch',\n      },\n    },\n  }));\n\n  const currencies = [\n    {\n      value: 'Select',\n      label: 'Selecione',\n    },\n    {\n      value: 'name',\n      label: 'Apadrinhar',\n    },\n    {\n      value: 'name',\n      label: 'Fazer doação',\n    },\n    {\n      value: 'name',\n      label: 'Ser amigo',\n    },\n  ];\n\n \n\n  const Text = ({ id='modal', onClose = () => {}, Children}) => {\n\n    const handleOutsideClick = (e) => {\n        if(e.target.id === id) onClose();\n    }\n\n    const classes = useStyles();\n    const [currency, setCurrency] = useState('Select');\n\n  \n\n    const handleChange = (event) => {\n        setCurrency(event.target.value) \n    };    \n    \n    function onSubmit(values,{ resetForm }){\n        console.log(values)\n    swal(\"Formulário preenchido!\", \"Em breve entraremos em contato!\", \"success\");\n    resetForm({ values: '' }) \n    // swal(\"Formulário preenchido!\", \"Em breve entraremos em contato!\", \"success\");\n    onClose()\n    }\n\n\n  return (\n    <div id={id} className='modalDoar' onClick={handleOutsideClick}>\n\n    <Formik\n    onSubmit={onSubmit}\n    validationSchema={schema2}\n    initialValues={{\n        name: '',\n        date: '',\n        email: '',\n        genero:'',\n        select:''\n    }}\n    \n    render={({ values, errors, touched, isValid }) => (\n        <Form className={classes.root} className='container-form'  autoComplete=\"on\">\n\n         <button onClick={(onClose)} className='close'>X</button>\n\n         <h2 className='title-h2 form-title'>Preencher o formulário</h2>\n      <Field id=\"standard-basic\" type=\"text\" name=\"name\" label=\"Nome Completo\" />\n\n      <Field id=\"standard-basic\" type='number' name=\"phone\" label=\"Telefone:\" />\n\n      <Field id=\"standard-basic\" type='date' name=\"date\" label=\"\" />\n\n      <Field id=\"standard-basic\" type='name' name=\"genero\" label=\"Gênero:\" />\n\n      <Field id=\"standard-basic\" type='email' name=\"email\" label=\"E-mail:\" />\n\n      {/* <h2>Eu quero:</h2> */}\n      <Field\n          id=\"standard-select-currency-native\"\n          select\n          name='select'\n          label=\"Eu quero:\"\n          value={currency}\n          onChange={handleChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText=\"Please select your currency\"\n        >\n          {/* {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))} */}\n          <option value=''></option>\n        </Field>\n       \n        <button \n            type='submit' \n            value='send' \n            name='send'\n            // disabled={!isValid} \n            className=\"button-form\"      \n            >\n            Enviar                            \n        </button>   \n    </Form>\n    )}\n    />\n    <div className='content'>{Children}</div>\n    </div>\n  )\n}\n\nexport default Text\n\n// const ModalFormDoar = ({ id='modal', onClose = () => {}, Children}) => {\n\n//     const handleOutsideClick = (e) => {\n//         if(e.target.id === id) onClose();\n//     }\n    \n    \n//     function onSubmit(values,{ resetForm }){\n//             console.log(values)\n//         swal(\"Formulário preenchido!\", \"Em breve entraremos em contato!\", \"success\");\n//         resetForm({ values: '' }) \n//         onClose()\n//     }\n    \n   \n\n//     return(       \n//         <div id={id} className='modalDoar' onClick={handleOutsideClick}>\n//             <Formik\n//                     onSubmit={onSubmit}\n//                     validationSchema={schema2}\n//                     initialValues={{\n//                         name: '',\n//                         date: '',\n//                         email: ''\n\n//                     }}\n\n//                     render={({ values, errors, touched, isValid }) => (\n                        \n//                         <Form className='container-form'>\n\n//                             <button onClick={(onClose)} className='close'>X</button>\n\n//                             <h2 className='title-h2 form-title' >Preencher o formulário</h2>\n                           \n//                             <section className='label'>\n//                             <label>Nome Completo</label>\n//                                     <Field\n//                                     type=\"text\"\n//                                     name=\"name\"\n//                                     className='input'\n//                                     />\n//                                     <ErrorMessage name='name' />\n//                             </section>\n\n//                             <div className='group1'>\n//                                 <section className='options'>\n//                                     <label>Data de nasc:</label> \n//                                     <Field\n//                                         type='date'\n//                                         name='date'\n//                                         className='input-2'\n                                        \n//                                         />\n//                                     <ErrorMessage name='date' />\n//                                 </section>\n//                                 <section className='options'>\n//                                 <label>Gênero</label>\n//                                 <Field name=\"genero\" component=\"select\" className='input-2' >\n//                                     <option value=\"red\">Selecione</option>\n//                                     <option value=\"red\">Masculino</option>\n//                                     <option value=\"green\">Feminino</option>\n//                                     <option value=\"blue\">Outros</option>\n//                                 </Field>\n                                \n//                                     {/* <select name=\"genero\"   className='input-2'>\n//                                         <option  className='input-3' value=\"selecione\">Selecione</option>\n//                                         <option  className='input-3' value=\"Masculino\">Masculino</option>\n//                                         <option  className='input-3' value=\"Fminino\">Feminino</option>\n//                                         <option   className='input-3'value=\"outros\">outros</option>\n//                                     </select> */}\n//                                     {/* <ErrorMessage name='genero'/> */}\n//                                 </section>\n                                \n//                             </div>\n\n//                             <section className='label section-email'>\n//                             <label >E-mail</label>\n//                             <Field\n//                                 type=\"text\"\n//                                 name=\"email\"\n//                                 placeholder=\"Digite o seu e-mail\"\n//                                 className='input'\n                                \n//                             />\n//                             <ErrorMessage name='email' />\n//                             </section>\n                           \n//                             <section className='options-2'>\n//                                 <label>Quero ajudar um miau com:</label>\n//                                 <select name=\"help\" id=\"Genero\">\n//                                     <option value=\"selecione\" >Selecione</option>\n//                                     <option value=\"apadrinhar\">Apadrinhar</option>\n//                                     <option value=\"doar\">Fazer doação</option>\n//                                     <option value=\"ser amigo\">Ser amigo</option>\n//                                 </select>\n//                             {/* <ErrorMessage name='help'/> */}\n//                             </section>\n\n//                             <button \n//                             type='submit' \n//                             value='send' \n//                             name='send'\n//                             disabled={!isValid} \n//                             className=\"button-form\"          \n//                             >\n//                             Enviar                            \n//                         </button>   \n\n//                         </Form>\n//                     )}\n\n//                 />\n//                 <div className='content'>{Children}</div>\n//         </div>\n//     )\n// }\n\n\n\n// export default ModalFormDoar\n\n\n"]},"metadata":{},"sourceType":"module"}